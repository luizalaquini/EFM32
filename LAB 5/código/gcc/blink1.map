
Discarded input sections

 .text          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/startup_efm32gg.o
 .text.SystemInit
                0x0000000000000000        0xc gcc/startup_efm32gg.o
 .text          0x0000000000000000        0x0 gcc/main.o
 .data          0x0000000000000000        0x0 gcc/main.o
 .bss           0x0000000000000000        0x0 gcc/main.o
 .rodata.GPIOD  0x0000000000000000        0x4 gcc/main.o
 .rodata.GPIOB  0x0000000000000000        0x4 gcc/main.o
 .text          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .data          0x0000000000000000        0x0 gcc/system_efm32gg.o
 .bss           0x0000000000000000        0x0 gcc/system_efm32gg.o
 .text.SystemMaxCoreClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemHFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o
 .text.SystemLFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemULFRCOClockGet
                0x0000000000000000       0x10 gcc/system_efm32gg.o
 .text.SystemLFXOClockGet
                0x0000000000000000       0x14 gcc/system_efm32gg.o
 .text.SystemLFXOClockSet
                0x0000000000000000       0x30 gcc/system_efm32gg.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x0000000000100000 xr
RAM              0x0000000020000000 0x0000000000020000 xrw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD gcc/startup_efm32gg.o
LOAD gcc/main.o
LOAD gcc/system_efm32gg.o
START GROUP
LOAD /home/luizalaquini/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/thumb/v7-m/nofp/libgcc.a
LOAD /home/luizalaquini/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/thumb/v7-m/nofp/libg_nano.a
LOAD /home/luizalaquini/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP
START GROUP
LOAD /home/luizalaquini/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/thumb/v7-m/nofp/libgcc.a
LOAD /home/luizalaquini/gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib/thumb/v7-m/nofp/libc_nano.a
END GROUP

.text           0x0000000000000000      0x7e4
 *(.vectors)
 .vectors       0x0000000000000000       0xdc gcc/startup_efm32gg.o
                0x0000000000000000                __Vectors
                0x00000000000000dc                __Vectors_End = .
                0x00000000000000dc                __Vectors_Size = (__Vectors_End - __Vectors)
                0x0000000020000028                __end__ = .
 *(.text*)
 .text.Reset_Handler
                0x00000000000000dc       0x50 gcc/startup_efm32gg.o
                0x00000000000000dc                Reset_Handler
 .text._main    0x000000000000012c        0xc gcc/startup_efm32gg.o
                0x000000000000012c                _main
 .text.Default_Handler
                0x0000000000000138        0x6 gcc/startup_efm32gg.o
                0x0000000000000138                TIMER2_IRQHandler
                0x0000000000000138                DebugMon_Handler
                0x0000000000000138                USART0_TX_IRQHandler
                0x0000000000000138                I2C0_IRQHandler
                0x0000000000000138                HardFault_Handler
                0x0000000000000138                LEUART1_IRQHandler
                0x0000000000000138                SysTick_Handler
                0x0000000000000138                USART1_RX_IRQHandler
                0x0000000000000138                PendSV_Handler
                0x0000000000000138                NMI_Handler
                0x0000000000000138                I2C1_IRQHandler
                0x0000000000000138                TIMER3_IRQHandler
                0x0000000000000138                USART1_TX_IRQHandler
                0x0000000000000138                MSC_IRQHandler
                0x0000000000000138                ADC0_IRQHandler
                0x0000000000000138                UsageFault_Handler
                0x0000000000000138                LEUART0_IRQHandler
                0x0000000000000138                GPIO_EVEN_IRQHandler
                0x0000000000000138                UART0_TX_IRQHandler
                0x0000000000000138                UART1_TX_IRQHandler
                0x0000000000000138                RTC_IRQHandler
                0x0000000000000138                TIMER0_IRQHandler
                0x0000000000000138                LCD_IRQHandler
                0x0000000000000138                PCNT2_IRQHandler
                0x0000000000000138                UART0_RX_IRQHandler
                0x0000000000000138                LETIMER0_IRQHandler
                0x0000000000000138                TIMER1_IRQHandler
                0x0000000000000138                USART2_RX_IRQHandler
                0x0000000000000138                Default_Handler
                0x0000000000000138                EMU_IRQHandler
                0x0000000000000138                PCNT0_IRQHandler
                0x0000000000000138                USB_IRQHandler
                0x0000000000000138                BURTC_IRQHandler
                0x0000000000000138                PCNT1_IRQHandler
                0x0000000000000138                ACMP0_IRQHandler
                0x0000000000000138                USART0_RX_IRQHandler
                0x0000000000000138                MemManage_Handler
                0x0000000000000138                SVC_Handler
                0x0000000000000138                DAC0_IRQHandler
                0x0000000000000138                UART1_RX_IRQHandler
                0x0000000000000138                CMU_IRQHandler
                0x0000000000000138                EBI_IRQHandler
                0x0000000000000138                LESENSE_IRQHandler
                0x0000000000000138                GPIO_ODD_IRQHandler
                0x0000000000000138                AES_IRQHandler
                0x0000000000000138                VCMP_IRQHandler
                0x0000000000000138                DMA_IRQHandler
                0x0000000000000138                BusFault_Handler
                0x0000000000000138                USART2_TX_IRQHandler
 *fill*         0x000000000000013e        0x2 
 .text.readButton
                0x0000000000000140      0x2c0 gcc/main.o
                0x0000000000000140                readButton
 .text.Delay    0x0000000000000400       0x40 gcc/main.o
                0x0000000000000400                Delay
 .text.main     0x0000000000000440       0x4c gcc/main.o
                0x0000000000000440                main
 .text.Incremento
                0x000000000000048c       0x30 gcc/main.o
                0x000000000000048c                Incremento
 .text.Decremento
                0x00000000000004bc       0x30 gcc/main.o
                0x00000000000004bc                Decremento
 .text.DeslocDir
                0x00000000000004ec       0x34 gcc/main.o
                0x00000000000004ec                DeslocDir
 .text.DeslocEsq
                0x0000000000000520       0x34 gcc/main.o
                0x0000000000000520                DeslocEsq
 .text.Equalizador
                0x0000000000000554       0x6c gcc/main.o
                0x0000000000000554                Equalizador
 .text.OnOff    0x00000000000005c0       0x24 gcc/main.o
                0x00000000000005c0                OnOff
 .text.AutoFantastico
                0x00000000000005e4       0x54 gcc/main.o
                0x00000000000005e4                AutoFantastico
 .text.Propria  0x0000000000000638       0x3c gcc/main.o
                0x0000000000000638                Propria
 .text.GetProdRev
                0x0000000000000674       0x18 gcc/system_efm32gg.o
 .text.SystemCoreClockGet
                0x000000000000068c       0x34 gcc/system_efm32gg.o
                0x000000000000068c                SystemCoreClockGet
 .text.SystemHFClockGet
                0x00000000000006c0      0x118 gcc/system_efm32gg.o
                0x00000000000006c0                SystemHFClockGet
 .text.SystemInit
                0x00000000000007d8        0xc gcc/system_efm32gg.o
                0x00000000000007d8                SystemInit
 *(.init)
 *(.fini)
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o *crtend?.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
 *(.rodata*)
 *(.eh_frame*)

.glue_7         0x00000000000007e4        0x0
 .glue_7        0x00000000000007e4        0x0 linker stubs

.glue_7t        0x00000000000007e4        0x0
 .glue_7t       0x00000000000007e4        0x0 linker stubs

.vfp11_veneer   0x00000000000007e4        0x0
 .vfp11_veneer  0x00000000000007e4        0x0 linker stubs

.v4_bx          0x00000000000007e4        0x0
 .v4_bx         0x00000000000007e4        0x0 linker stubs

.iplt           0x00000000000007e4        0x0
 .iplt          0x00000000000007e4        0x0 gcc/startup_efm32gg.o

.rel.dyn        0x00000000000007e4        0x0
 .rel.iplt      0x00000000000007e4        0x0 gcc/startup_efm32gg.o

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x00000000000007e4                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x00000000000007e4                __exidx_end = .
                0x00000000000007e4                __etext = .

.data           0x0000000020000000        0x8 load address 0x00000000000007e4
                0x0000000020000000                __data_start__ = .
 *(vtable)
 *(.data*)
 .data.SystemHFXOClock
                0x0000000020000000        0x4 gcc/system_efm32gg.o
 .data.SystemLFXOClock
                0x0000000020000004        0x4 gcc/system_efm32gg.o
                0x0000000020000008                . = ALIGN (0x4)
 *(.ram)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
                [!provide]                        PROVIDE (__init_array_end = .)
                0x0000000020000008                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
                [!provide]                        PROVIDE (__fini_array_end = .)
 *(.jcr*)
                0x0000000020000008                . = ALIGN (0x4)
                0x0000000020000008                __data_end__ = .

.igot.plt       0x0000000020000008        0x0 load address 0x00000000000007ec
 .igot.plt      0x0000000020000008        0x0 gcc/startup_efm32gg.o

.bss            0x0000000020000008       0x1c load address 0x00000000000007ec
                0x0000000020000008                . = ALIGN (0x4)
                0x0000000020000008                __bss_start__ = .
 *(.bss*)
 .bss.count     0x0000000020000008        0x4 gcc/main.o
                0x0000000020000008                count
 .bss.seq       0x000000002000000c        0xc gcc/main.o
                0x000000002000000c                seq
 .bss.statePB0  0x0000000020000018        0x4 gcc/main.o
                0x0000000020000018                statePB0
 .bss.statePB1  0x000000002000001c        0x4 gcc/main.o
                0x000000002000001c                statePB1
 .bss.SystemCoreClock
                0x0000000020000020        0x4 gcc/system_efm32gg.o
                0x0000000020000020                SystemCoreClock
 *(COMMON)
                0x0000000020000024                . = ALIGN (0x4)
                0x0000000020000024                __bss_end__ = .

.heap           0x0000000020000028      0xc00
                0x0000000020000028                __HeapBase = .
                0x0000000020000028                __end__ = .
                0x0000000020000028                end = __end__
                0x0000000020000028                _end = __end__
 *(.heap*)
 .heap          0x0000000020000028      0xc00 gcc/startup_efm32gg.o
                0x0000000020000c28                __HeapLimit = .

.stack_dummy    0x0000000020000c28      0x400
 *(.stack*)
 .stack         0x0000000020000c28      0x400 gcc/startup_efm32gg.o
                0x0000000020020000                __StackTop = (ORIGIN (RAM) + LENGTH (RAM))
                0x000000002001fc00                __StackLimit = (__StackTop - SIZEOF (.stack_dummy))
                [!provide]                        PROVIDE (__stack = __StackTop)
                0x0000000000000001                ASSERT ((__StackLimit >= __HeapLimit), region RAM overflowed with stack)
                0x0000000000000001                ASSERT ((LENGTH (FLASH) >= (__etext + SIZEOF (.data))), FLASH memory overflowed !)
OUTPUT(gcc/blink1.axf elf32-littlearm)
LOAD linker stubs

.debug_info     0x0000000000000000      0xd1b
 .debug_info    0x0000000000000000      0x1e1 gcc/startup_efm32gg.o
 .debug_info    0x00000000000001e1      0x636 gcc/main.o
 .debug_info    0x0000000000000817      0x504 gcc/system_efm32gg.o

.debug_abbrev   0x0000000000000000      0x407
 .debug_abbrev  0x0000000000000000       0xfb gcc/startup_efm32gg.o
 .debug_abbrev  0x00000000000000fb      0x187 gcc/main.o
 .debug_abbrev  0x0000000000000282      0x185 gcc/system_efm32gg.o

.debug_aranges  0x0000000000000000      0x118
 .debug_aranges
                0x0000000000000000       0x38 gcc/startup_efm32gg.o
 .debug_aranges
                0x0000000000000038       0x70 gcc/main.o
 .debug_aranges
                0x00000000000000a8       0x70 gcc/system_efm32gg.o

.debug_ranges   0x0000000000000000       0xe8
 .debug_ranges  0x0000000000000000       0x28 gcc/startup_efm32gg.o
 .debug_ranges  0x0000000000000028       0x60 gcc/main.o
 .debug_ranges  0x0000000000000088       0x60 gcc/system_efm32gg.o

.debug_line     0x0000000000000000      0xc44
 .debug_line    0x0000000000000000      0x178 gcc/startup_efm32gg.o
 .debug_line    0x0000000000000178      0x7bc gcc/main.o
 .debug_line    0x0000000000000934      0x310 gcc/system_efm32gg.o

.debug_str      0x0000000000000000      0x59d
 .debug_str     0x0000000000000000      0x1e2 gcc/startup_efm32gg.o
                                        0x227 (size before relaxing)
 .debug_str     0x00000000000001e2      0x238 gcc/main.o
                                        0x3b5 (size before relaxing)
 .debug_str     0x000000000000041a      0x183 gcc/system_efm32gg.o
                                        0x42f (size before relaxing)

.comment        0x0000000000000000       0x49
 .comment       0x0000000000000000       0x49 gcc/startup_efm32gg.o
                                         0x4a (size before relaxing)
 .comment       0x0000000000000049       0x4a gcc/main.o
 .comment       0x0000000000000049       0x4a gcc/system_efm32gg.o

.ARM.attributes
                0x0000000000000000       0x2d
 .ARM.attributes
                0x0000000000000000       0x2d gcc/startup_efm32gg.o
 .ARM.attributes
                0x000000000000002d       0x2d gcc/main.o
 .ARM.attributes
                0x000000000000005a       0x2d gcc/system_efm32gg.o

.debug_frame    0x0000000000000000      0x364
 .debug_frame   0x0000000000000000       0x78 gcc/startup_efm32gg.o
 .debug_frame   0x0000000000000078      0x16c gcc/main.o
 .debug_frame   0x00000000000001e4      0x180 gcc/system_efm32gg.o
